apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-registry
  labels:
    app: registry
    release: {{ .Release.Name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: registry
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: registry
        release: {{ .Release.Name }}
    spec:
      {{- if .Values.registry.initContainers }}
      initContainers:
        {{- toYaml .Values.registry.initContainers | nindent 8 }}
      {{- end }}
      containers:
        - name: registry
          image: "{{ .Values.registry.image.repository }}:{{ .Values.registry.image.tag }}"
          imagePullPolicy: {{ .Values.registry.image.pullPolicy }}
          terminationMessagePath: /Users/mini/Documents/logs/infra/registry/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
          ports:
            - containerPort: 5000
              protocol: TCP
          env:
            {{- if .Values.registry.env }}
            {{- toYaml .Values.registry.env | nindent 12 }}
            {{- end }}
            {{- if .Values.registry.auth.enabled }}
            - name: REGISTRY_AUTH
              value: "htpasswd"
            - name: REGISTRY_AUTH_HTPASSWD_REALM
              value: "Registry Realm"
            - name: REGISTRY_AUTH_HTPASSWD_PATH
              value: "/auth/htpasswd"
            {{- end }}
          volumeMounts:
            - name: storage
              mountPath: /var/lib/registry
            - name: logs
              mountPath: /Users/mini/Documents/logs/infra/registry
            {{- if .Values.registry.auth.enabled }}
            - name: auth
              mountPath: /auth
              readOnly: true
            {{- end }}
          resources:
            {{- toYaml .Values.registry.resources | nindent 12 }}
          livenessProbe:
            httpGet:
              path: /
              port: 5000
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /
              port: 5000
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
      {{- if .Values.registry.securityContext.enabled }}
      securityContext:
        runAsUser: {{ .Values.registry.securityContext.runAsUser }}
        runAsGroup: {{ .Values.registry.securityContext.runAsGroup }}
        fsGroup: {{ .Values.registry.securityContext.fsGroup }}
      {{- end }}
      volumes:
        - name: storage
          {{- if .Values.registry.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-registry-pvc
          {{- else }}
          emptyDir: {}
          {{- end }}
        - name: logs
          hostPath:
            path: /Users/mini/Documents/logs/infra/registry
            type: DirectoryOrCreate
        {{- if .Values.registry.auth.enabled }}
        - name: auth
          secret:
            secretName: {{ .Release.Name }}-registry-auth
        {{- end }} 